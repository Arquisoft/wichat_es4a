const axios = require('axios');
const { Game } = require("../models");

// Valida que el request tenga los campos requeridos en el cuerpo
const validate = (req, requiredFields) => {
    for (const field of requiredFields) {
        if (!(field in req.body)) {
            return false;
        }
    }
    return true;
};
  
// Obtiene la pregunta actual del usuario basado en su ID
const getCurrentQuestion = async (userId) => {
    let games = await Game.findAll({
        where: {
            user_id: userId
        }
    });

    // Si el usuario no tiene juegos activos, retorna null
    if (games == null || games.length < 1) {
        return null;
    }
  
    let game = games[0];  // Obtiene el primer juego encontrado
  
    let questions = await game.getQuestions();
    // Si no hay preguntas en el juego, retorna null
    if (questions == null || questions.length < 1) {
        return null;
    }
  
    return questions[0]; // Retorna la primera pregunta del juego
};
  
// Hace una solicitud para generar una nueva pregunta a un servicio externo
const requestQuestion = async () => {
    let url = "http://question:8002/api/questions/generate";
    
    // Si no está en entorno de producción, usa localhost
    if (process.env.NODE_ENV !== "production") {
        url = "http://localhost:8002/api/questions/generate";
    }

    return (await axios.post(url)).data; // Realiza la solicitud y retorna los datos
};

module.exports = { validate, getCurrentQuestion, requestQuestion };